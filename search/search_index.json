{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Personal blog","text":""},{"location":"2024/08/18/build-your-blog/","title":"Build your blog","text":""},{"location":"2024/08/18/build-your-blog/#building-and-deploying-a-blog-with-mkdocs-with-ci","title":"Building and Deploying a Blog with MkDocs with CI","text":"<p>Welcome! In this guide, you\u2019ll learn how to build and deploy a blog using MkDocs, a tool that makes it easy to create beautiful documentation. We\u2019ll cover each step to help you get your blog online.</p>"},{"location":"2024/08/18/build-your-blog/#what-you-need","title":"What You Need","text":"<ol> <li>GitHub Account: You need a GitHub account to store and deploy your blog.</li> <li>Basic Knowledge: Familiarity with GitHub, Docker, and some command line basics will be helpful.</li> </ol>"},{"location":"2024/08/18/build-your-blog/#step-1-setting-up-your-blog","title":"Step 1: Setting Up Your Blog","text":"<ol> <li> <p>Create a GitHub Repository:</p> <ul> <li>Visit GitHub and log in.</li> <li>Click on New to create a repository.</li> <li>Name your repository, for example, <code>my-blog</code>.</li> <li>Choose Public or Private based on your preference.</li> <li>Click Create repository.</li> </ul> </li> <li> <p>Install MkDocs Locally:</p> <ul> <li>Open your terminal or command line.</li> <li>Install MkDocs with pip:    <pre><code>pip install mkdocs\n</code></pre></li> </ul> </li> <li> <p>Set Up Your Blog:</p> <ul> <li>Navigate to the folder where you want to create your blog.</li> <li>Run:    <pre><code>mkdocs new my-blog\n</code></pre></li> <li>This creates a folder named <code>my-blog</code> with the basic files for your blog.</li> </ul> </li> <li> <p>Customize Your Blog:</p> <ul> <li>Open the <code>mkdocs.yml</code> file in your blog's folder. This is where you set your blog\u2019s name and theme.</li> <li> <p>Modify the <code>mkdocs.yml</code> file to look like this:</p> <pre><code>site_name: My Blog\ntheme:\n  name: material\nnav:\n  - Home: index.md\n</code></pre> </li> </ul> <ul> <li>Add content by editing <code>index.md</code> or creating new Markdown files in the <code>docs</code> folder.</li> </ul> </li> </ol>"},{"location":"2024/08/18/build-your-blog/#step-2-build-and-deploy-using-docker","title":"Step 2: Build and Deploy Using Docker","text":"<ol> <li> <p>Create a Docker Image:</p> <ul> <li>Write a Dockerfile to include MkDocs and necessary tools.</li> <li> <p>Here\u2019s a basic Dockerfile:</p> <pre><code># Use Python 3.12 image\nFROM python:3.12-slim\n\n# Set the working directory\nWORKDIR /app\n\n# Install MkDocs and plugins\nRUN pip install mkdocs mkdocs-material ghp-import\n\n# Copy blog files into Docker image\nCOPY . /app\n\n# Set command to build MkDocs\nCMD [\"mkdocs\", \"build\", \"--verbose\", \"--site-dir\", \"site\"]\n</code></pre> </li> </ul> <ul> <li>Build the Docker image with:    <pre><code>docker build -t my-blog-image .\n</code></pre></li> </ul> </li> <li> <p>Deploy Your Blog:</p> <ul> <li> <p>Create a GitHub Actions workflow file to automate deployment. Save the following as <code>.github/workflows/deploy.yml</code> in your repository:</p> <pre><code>name: Build and Deploy MkDocs Site\n\non:\n  push:\n    branches:\n      - main\n  pull_request:\n    branches:\n      - main\n  workflow_dispatch:\n\nenv:\n  IMAGE_NAME: my-blog-image\n  IMAGE_TAG: latest\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n\n    steps:\n      - name: Checkout code\n        uses: actions/checkout@v3\n\n      - name: Build MkDocs site\n        run: |\n          docker run --rm -v ${{ github.workspace }}:/app -w /app ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} mkdocs build --verbose --site-dir site\n\n      - name: Deploy to GitHub Pages\n        if: github.ref == 'refs/heads/main'\n        run: |\n          docker run --rm -v ${{ github.workspace }}:/app -w /app ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} /bin/bash -c \"\n            ghp-import -n -p -f site -r https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git -b gh-pages\"\n\n      - name: Clean up Docker resources\n        run: docker system prune -f\n</code></pre> </li> </ul> </li> </ol>"},{"location":"2024/08/18/build-your-blog/#final-steps","title":"Final Steps","text":"<ol> <li> <p>Push Your Changes:</p> <ul> <li>Commit and push your changes to GitHub:    <pre><code>git add .\ngit commit -m \"Set up MkDocs site\"\ngit push origin main\n</code></pre></li> </ul> </li> <li> <p>Ensure Correct Permissions for Deployment:</p> <ul> <li>To avoid permission issues with GitHub Actions, ensure that the <code>GITHUB_TOKEN</code> has the necessary permissions.</li> <li>Check Repository Settings:<ul> <li>Go to your repository on GitHub.</li> <li>Navigate to Settings &gt; Actions &gt; General.</li> <li>Under Workflow permissions, ensure Read and write permissions are selected.</li> </ul> </li> </ul> </li> <li> <p>Verify Deployment:</p> <ul> <li>Go to your GitHub repository.</li> <li>Navigate to Settings &gt; Pages.</li> <li>Ensure the source is set to the <code>gh-pages</code> branch.</li> </ul> <p>Your blog should now be live! Visit the URL provided in the GitHub Pages settings to see your site.</p> </li> </ol>"},{"location":"2024/08/18/build-your-blog/#conclusion","title":"Conclusion","text":"<p>Congratulations! You\u2019ve built and deployed a blog using MkDocs and Docker. This guide aimed to simplify the process, so you can easily share your content online. Happy blogging!</p> <p>For a complete example, check out my project: GitHub Repository.</p> <p>This version of the guide simplifies the instructions and organizes the steps clearly to help you get started with building and deploying your blog.</p>"},{"location":"2024/08/11/iam-for-eks/","title":"Iam for eks","text":""},{"location":"2024/08/11/iam-for-eks/#understanding-iam-roles-and-users-in-aws-with-a-practical-example-running-an-application-on-eks","title":"Understanding IAM Roles and Users in AWS with a Practical Example: Running an Application on EKS","text":"<p>AWS Identity and Access Management (IAM) is a cornerstone of security and access control in AWS environments. IAM allows you to manage users, groups, and roles, and to specify their permissions to access AWS resources. In this article, we will explore the differences between IAM roles and IAM users, provide a practical scenario of deploying an application on Amazon EKS (Elastic Kubernetes Service), and clarify how IAM roles relate to specific AWS console options.</p>"},{"location":"2024/08/11/iam-for-eks/#1-iam-role-vs-iam-user","title":"1. IAM Role vs. IAM User","text":"<p>IAM User: - An IAM user is an entity that represents a person or application that interacts with AWS resources. Each IAM user has a unique set of credentials (username and password or access keys). - IAM users are generally assigned permissions directly or through group memberships. - Example: A developer who needs access to specific AWS resources and can authenticate using their IAM user credentials.</p> <p>IAM Role: - An IAM role is an AWS identity with specific permissions that can be assumed by entities like AWS services, EC2 instances, or even IAM users. - Roles are temporary and are assumed by entities that need to perform specific actions. They do not have permanent credentials; instead, they provide temporary security credentials. - Example: An EC2 instance running a containerized application that needs to pull images from Amazon ECR.</p>"},{"location":"2024/08/11/iam-for-eks/#2-practical-scenario-deploying-an-application-on-eks","title":"2. Practical Scenario: Deploying an Application on EKS","text":"<p>Let\u2019s walk through an example of deploying an application, such as Gradio, on Amazon EKS. Gradio is a popular library for creating machine learning demos.</p> <p>Steps for Deployment:</p> <ol> <li> <p>Set Up IAM Roles for EKS:</p> <ul> <li>Cluster Role: Create an IAM role that the EKS cluster will use. This role allows EKS to manage the underlying EC2 instances and perform other operations.</li> <li>Node Instance Role: Create another IAM role for EC2 instances that will run the Kubernetes worker nodes. This role allows the instances to interact with other AWS services, like pulling images from ECR or writing logs to CloudWatch.</li> </ul> <p>Example IAM Policy for Node Instance Role:</p> <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeTags\",\n                \"ecr:GetAuthorizationToken\",\n                \"ecr:BatchCheckLayerAvailability\",\n                \"ecr:GetDownloadUrlForLayer\",\n                \"ecr:BatchGetImage\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n</code></pre> </li> <li> <p>Create an EKS Cluster:</p> <ul> <li>Go to the EKS Console.</li> <li>Create a new EKS cluster and associate it with the IAM cluster role created earlier.</li> </ul> </li> <li> <p>Launch EC2 Instances for Kubernetes Nodes:</p> <ul> <li>Launch EC2 instances and associate them with the IAM node instance role. Ensure these instances are part of the EKS node group.</li> </ul> </li> <li> <p>Deploy Gradio Application:</p> <ul> <li>Package your Gradio application into a Docker container and push the image to Amazon ECR.</li> <li>Create a Kubernetes deployment YAML file specifying the container image from ECR and deploy it to your EKS cluster.</li> </ul> <p>Example Kubernetes Deployment YAML:</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: gradio-app\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: gradio\n  template:\n    metadata:\n      labels:\n        app: gradio\n    spec:\n      containers:\n        - name: gradio-container\n          image: &lt;your-ecr-repository-url&gt;/gradio-app:latest\n          ports:\n            - containerPort: 7860\n</code></pre> </li> <li> <p>Expose the Application:</p> <ul> <li>Create a Kubernetes Service to expose the Gradio application to the internet.</li> </ul> <p>Example Service YAML:</p> <pre><code>apiVersion: v1\nkind: Service\nmetadata:\n  name: gradio-service\nspec:\n  selector:\n    app: gradio\n  ports:\n    - protocol: TCP\n      port: 80\n      targetPort: 7860\n  type: LoadBalancer\n</code></pre> </li> </ol>"},{"location":"2024/08/11/iam-for-eks/#3-iam-roles-in-aws-console-options","title":"3. IAM Roles in AWS Console Options","text":"<p>You mentioned having different console options: <code>DATAengROLE</code>, <code>DATASCIENC</code>, and <code>DATAANALYST</code>. These are IAM roles configured for various teams or purposes. Here\u2019s how they might be used:</p> <ul> <li>DATAengROLE: This role could be configured to provide access to data engineering tools and resources, like Apache Airflow, for data engineers. If you have access to Airflow with this role, it means that <code>DATAengROLE</code> includes permissions to view and manage Airflow resources.</li> </ul> <ul> <li>DATASCIENC: This role might be tailored for data scientists, granting access to tools and resources pertinent to data analysis and modeling. The specific permissions and services available to this role would depend on the policies attached.</li> </ul> <ul> <li>DATAANALYST: This role could be for data analysts, providing access to reporting tools or datasets but not necessarily the same resources as the other roles.</li> </ul> <p>Role-Based Access: In your case, when using the <code>DATAengROLE</code>, you have access to Airflow because this role has the necessary permissions configured. Conversely, the <code>DATAANALYST</code> role might not have the same permissions, hence the lack of access to Airflow.</p>"},{"location":"2024/08/11/iam-for-eks/#conclusion","title":"Conclusion","text":"<p>Understanding the difference between IAM roles and IAM users is fundamental for managing access and permissions in AWS. IAM roles are particularly useful for granting temporary access and managing permissions for AWS services and resources, while IAM users are suited for individuals requiring direct access.</p> <p>In the context of deploying an application like Gradio on Amazon EKS, properly configuring IAM roles ensures that your EKS cluster and EC2 instances have the appropriate permissions to interact with other AWS services. Additionally, understanding IAM roles in relation to different AWS console options helps in managing access based on specific roles and responsibilities within your organization.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/","title":"Comment Cr\u00e9er et Configurer un Cluster Amazon EMR sur EC2","text":"<p>Cr\u00e9er un cluster EMR (Elastic MapReduce) sur EC2 peut sembler complexe, surtout si vous vous lancez pour la premi\u00e8re fois. Dans cet article, je vais vous guider \u00e0 travers chaque \u00e9tape, depuis la cr\u00e9ation des r\u00f4les jusqu\u2019\u00e0 la connexion \u00e0 JupyterHub via un tunnel SSH. Ce guide est con\u00e7u pour vous fournir des explications claires et d\u00e9taill\u00e9es afin que vous puissiez configurer votre cluster sans difficult\u00e9. Nous nous concentrerons sp\u00e9cifiquement sur EMR sur EC2. La petite histoire est que j'ai pass\u00e9 des heures \u00e0 expliquer cela \u00e0 plusieurs \u00e9tudiants int\u00e9ress\u00e9s par EMR. J'ai donc d\u00e9cid\u00e9 de r\u00e9diger cet article pour aider un plus grand nombre de personnes \u00e0 comprendre et \u00e0 configurer un cluster EMR de mani\u00e8re efficace. EMR ne faisant pas partie des services gratuit du compte tier, il faut prevoir entre 1 \u00e0 5 euros de facture sur aws.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#1-creer-un-role-emr-avec-les-permissions-necessaires","title":"1. Cr\u00e9er un R\u00f4le EMR avec les Permissions N\u00e9cessaires","text":""},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#pourquoi-est-ce-important","title":"Pourquoi est-ce important?","text":"<p>Avant de pouvoir cr\u00e9er un cluster EMR, vous devez configurer les r\u00f4les et permissions n\u00e9cessaires pour permettre \u00e0 Amazon Web Services (AWS) de g\u00e9rer votre cluster en toute s\u00e9curit\u00e9. Ces r\u00f4les permettent \u00e0 votre cluster d\u2019interagir avec d'autres services AWS comme S3, EC2, et EMR lui-m\u00eame.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#etape-1-creation-dun-role-emr-pour-ec2","title":"\u00c9tape 1: Cr\u00e9ation d'un R\u00f4le EMR pour EC2","text":"<ol> <li> <p>Acc\u00e9der \u00e0 la console IAM:    Connectez-vous \u00e0 votre compte AWS et rendez-vous sur la console IAM. IAM (Identity and Access Management) est l'endroit o\u00f9 vous g\u00e9rez les permissions et les r\u00f4les pour vos services AWS.</p> </li> <li> <p>Cr\u00e9er un nouveau r\u00f4le:</p> <ul> <li>Cliquez sur R\u00f4les dans le menu de gauche, puis sur Cr\u00e9er un r\u00f4le.</li> <li>S\u00e9lectionnez EMR comme type de r\u00f4le, puis choisissez EC2 comme service. Cela signifie que vous cr\u00e9ez un r\u00f4le qui sera utilis\u00e9 par les instances EC2 dans votre cluster EMR.</li> </ul> </li> <li> <p>Ajouter les politiques de permissions:</p> <ul> <li>AmazonS3FullAccess : Permet \u00e0 votre cluster de lire et d\u2019\u00e9crire dans des buckets S3, essentiel pour stocker les donn\u00e9es et les journaux de votre cluster.</li> <li>AmazonEC2FullAccess : Permet \u00e0 EMR de g\u00e9rer les instances EC2 (d\u00e9marrage, arr\u00eat, configuration).</li> <li>AmazonElasticMapReduceFullAccess : Donne \u00e0 EMR un acc\u00e8s complet pour g\u00e9rer toutes les op\u00e9rations li\u00e9es \u00e0 votre cluster.</li> </ul> </li> </ol> <p>Lorsque vous configurerez votre cluster, s\u00e9lectionnez ce r\u00f4le sous EC2 instance profile pour permettre \u00e0 votre cluster d\u2019utiliser ces permissions.</p> <p></p> <p>Astuce: Les permissions sont cruciales pour la s\u00e9curit\u00e9. Accordez les permissions minimales n\u00e9cessaires pour accomplir vos t\u00e2ches.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#2-creer-une-cle-ssh-pour-ec2","title":"2. Cr\u00e9er une Cl\u00e9 SSH pour EC2","text":""},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#pourquoi-en-avez-vous-besoin","title":"Pourquoi en avez-vous besoin?","text":"<p>Une cl\u00e9 SSH est n\u00e9cessaire pour se connecter \u00e0 distance aux instances EC2 de votre cluster. Cette connexion vous permet d'administrer les n\u0153uds du cluster, d\u2019installer des logiciels suppl\u00e9mentaires ou de d\u00e9boguer directement sur le serveur.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#etape-2-creation-dune-paire-de-cles-ssh","title":"\u00c9tape 2: Cr\u00e9ation d'une Paire de Cl\u00e9s SSH","text":"<ol> <li> <p>Acc\u00e9der \u00e0 la console EC2:    Dans la console AWS, acc\u00e9dez \u00e0 la section EC2 pour g\u00e9rer vos instances et autres ressources li\u00e9es \u00e0 EC2.</p> </li> <li> <p>Cr\u00e9er une paire de cl\u00e9s:</p> <ul> <li>Dans le menu de gauche, s\u00e9lectionnez Key Pairs sous la section Network &amp; Security.</li> <li>Cliquez sur Create Key Pair.</li> <li>Donnez un nom \u00e0 votre cl\u00e9 et choisissez le format souhait\u00e9 (PEM pour Linux/Mac, PPK pour Windows avec PuTTY).</li> <li>T\u00e9l\u00e9chargez la cl\u00e9. Cette cl\u00e9 vous permettra de vous connecter en SSH \u00e0 vos instances EC2.</li> </ul> </li> </ol> <p>Note: Gardez cette cl\u00e9 en s\u00e9curit\u00e9. Si vous la perdez, vous ne pourrez pas vous reconnecter \u00e0 votre instance.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#3-creation-et-configuration-du-cluster-emr","title":"3. Cr\u00e9ation et Configuration du Cluster EMR","text":""},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#pourquoi-cette-etape-est-elle-cruciale","title":"Pourquoi cette \u00e9tape est-elle cruciale?","text":"<p>La configuration du cluster est le c\u0153ur de l\u2019op\u00e9ration. C\u2019est ici que vous choisissez les logiciels que vous voulez installer, les types d'instances \u00e0 utiliser, et les options de mise en r\u00e9seau.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#etape-3-creer-un-cluster-emr","title":"\u00c9tape 3: Cr\u00e9er un Cluster EMR","text":"<ol> <li> <p>Cr\u00e9er le cluster:</p> <ul> <li>Allez sur la console EMR et cliquez sur Create cluster.</li> <li>Donnez un nom \u00e0 votre cluster. Par exemple, \"Cluster-DataScience\".</li> </ul> </li> <li> <p>Choisir les composants logiciels:</p> <ul> <li>EMR propose plusieurs logiciels que vous pouvez installer directement lors de la cr\u00e9ation du cluster. Pour un environnement de science des donn\u00e9es, incluez TensorFlow, JupyterHub (pour g\u00e9rer vos notebooks), et Zeppelin.  </li> </ul> </li> <li> <p>Choisir les types d'instances:</p> <ul> <li>Master node: Le n\u0153ud ma\u00eetre coordonne toutes les t\u00e2ches du cluster. Une instance <code>m5.xlarge</code> est un bon choix pour \u00e9quilibrer co\u00fbt et performance.</li> <li>Core nodes: Ces n\u0153uds ex\u00e9cutent les t\u00e2ches. Vous pouvez opter pour des instances plus \u00e9conomiques si vous avez un budget serr\u00e9.</li> </ul> </li> <li> <p>Configurer le volume EBS:</p> <ul> <li>Par d\u00e9faut, EMR vous propose un volume racine EBS pour chaque instance. Vous pouvez g\u00e9n\u00e9ralement accepter cette valeur par d\u00e9faut.</li> </ul> </li> <li> <p>Configurer le r\u00e9seau (VPC et sous-r\u00e9seau):</p> <ul> <li>Assurez-vous de s\u00e9lectionner un sous-r\u00e9seau public pour acc\u00e9der \u00e0 votre cluster via SSH et Web. Si vous n'avez pas de VPC disponible, cr\u00e9ez-le ainsi:  </li> </ul> </li> <li> <p>Ajouter des actions Bootstrap:</p> <ul> <li>Les actions Bootstrap sont des scripts ex\u00e9cut\u00e9s sur chaque n\u0153ud lors du d\u00e9marrage. Cr\u00e9ez un fichier avec l'extension <code>.sh</code> que vous garderez dans votre S3 et fournissez-le \u00e0 EMR via son URI :    <pre><code>#!/bin/bash -xe\nsudo pip install -U \\\n  awscli            \\\n  boto3             \\\n  wheel             \\\n  s3fs              \\\n  fsspec            \\\n  pyarrow\nsudo pip install -U pandas pillow scikit-learn tensorflow\n</code></pre></li> <li>Ce script installe des biblioth\u00e8ques Python couramment utilis\u00e9es dans le traitement de donn\u00e9es. Il est essentiel de r\u00e9aliser ces actions \u00e0 cette \u00e9tape pour que les packages soient install\u00e9s sur l'ensemble des machines du cluster, et non uniquement sur le driver (comme ce serait le cas si vous ex\u00e9cutiez ces commandes directement dans le notebook JupyterHub ou dans la console EMR).</li> </ul> </li> <li> <p>Configurer la persistance des notebooks Jupyter:</p> <ul> <li>Configurez JupyterHub pour qu\u2019il sauvegarde automatiquement vos notebooks sur un bucket S3 en ajoutant ce param\u00e8tre dans Software settings:    <pre><code>[\n    {\n        \"Classification\": \"jupyter-s3-conf\",\n        \"Properties\": {\n            \"s3.persistence.enabled\": \"true\",\n            \"s3.persistence.bucket\": \"MyJupyterBackups\"\n        }\n    }\n]\n</code></pre></li> </ul> </li> <li> <p>Configurer les journaux du cluster:</p> <ul> <li>Assurez-vous que les journaux du cluster sont publi\u00e9s sur S3. Cela vous aidera \u00e0 diagnostiquer tout probl\u00e8me apr\u00e8s coup.</li> </ul> </li> </ol> <p>Rappel: La cr\u00e9ation du cluster peut prendre entre 5 et 10 minutes, et vous commencerez \u00e0 \u00eatre factur\u00e9 d\u00e8s que le cluster d\u00e9marre.</p> <p>Une fois pr\u00eat, vous verrez vos applications list\u00e9es, mais elles ne seront pas encore accessibles. </p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#4-configuration-du-tunnel-ssh-vers-le-nud-maitre","title":"4. Configuration du Tunnel SSH vers le N\u0153ud Ma\u00eetre","text":""},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#pourquoi-configurer-un-tunnel-ssh","title":"Pourquoi configurer un tunnel SSH?","text":"<p>Le n\u0153ud ma\u00eetre de votre cluster est prot\u00e9g\u00e9 derri\u00e8re un pare-feu, et les applications comme JupyterHub ne sont accessibles que via le r\u00e9seau local du cluster. Le tunnel SSH vous permet de contourner cette restriction en cr\u00e9ant un pont s\u00e9curis\u00e9 entre votre machine locale et le n\u0153ud ma\u00eetre.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#etape-4-creation-du-tunnel-ssh","title":"\u00c9tape 4: Cr\u00e9ation du Tunnel SSH","text":""},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#41-ouverture-du-port-22","title":"4.1 Ouverture du Port 22","text":"<ol> <li> <p>Configurer les autorisations:</p> <ul> <li>Sur la console EC2, allez dans Security Groups.</li> <li>Modifiez le groupe de s\u00e9curit\u00e9 attach\u00e9 au n\u0153ud ma\u00eetre de votre cluster.</li> <li>Ajoutez une r\u00e8gle pour autoriser les connexions SSH (port 22) depuis n'importe quelle IP, ou restreignez-la \u00e0 votre IP pour plus de s\u00e9curit\u00e9. Modifiez le groupe de s\u00e9curit\u00e9 associ\u00e9 aux <code>master</code>. Il ressemblera \u00e0 ceci :  </li> </ul> <p>\u00c0 la fin, vous devriez avoir des r\u00e8gles qui ressemblent \u00e0 ceci :  </p> </li> </ol>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#42-etablissement-du-tunnel-ssh","title":"4.2 \u00c9tablissement du Tunnel SSH","text":"<ol> <li> <p>R\u00e9cup\u00e9rer les informations de connexion:</p> <ul> <li>Sur la console EMR, acc\u00e9dez \u00e0 l\u2019onglet Summary de votre cluster.</li> <li>Cliquez sur Enable Web Connection pour g\u00e9n\u00e9rer la commande SSH n\u00e9cessaire pour \u00e9tablir le tunnel.</li> </ul> </li> <li> <p>Utilisation de PuTTY pour Windows:</p> <ul> <li>Si vous \u00eates sur Windows, utilisez PuTTY pour \u00e9tablir le tunnel SSH en configurant les param\u00e8tres avec votre cl\u00e9 <code>.ppk</code>.</li> <li>Suivez les \u00e9tapes indiqu\u00e9es sur la console AWS.  </li> </ul> </li> </ol> <p>Astuce: Si vous utilisez Linux ou macOS, ex\u00e9cutez simplement la commande SSH dans votre terminal.</p> <p>Si votre connexion SSH a r\u00e9ussi, vous verrez cette fen\u00eatre : </p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#43-configuration-de-switchomega-ou-foxyproxy","title":"4.3 Configuration de SwitchOmega ou FoxyProxy","text":"<ol> <li> <p>Installation de SwitchyOmega:</p> <ul> <li>Pour acc\u00e9der aux applications via le tunnel SSH, configurez votre navigateur pour utiliser ce tunnel. Installez l\u2019extension SwitchyOmega pour Chrome et configurez-la en suivant les instructions d\u00e9taill\u00e9es dans la documentation AWS.</li> </ul> <p>Si cela vous semble compliqu\u00e9, r\u00e9f\u00e9rez-vous aux vid\u00e9os YouTube suivantes :</p> <ul> <li>Vid\u00e9o 1 (\u00c0 partir de 5:10)</li> <li>Vid\u00e9o 2 (\u00c0 partir de 8:00)</li> </ul> </li> </ol> <p>Note: Parfois, il peut \u00eatre n\u00e9cessaire de red\u00e9marrer le navigateur ou attendre quelques minutes pour que l'extension fonctionne correctement.</p>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#5-connexion-a-jupyterhub","title":"5. Connexion \u00e0 JupyterHub","text":""},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#etape-5-acceder-a-jupyterhub","title":"\u00c9tape 5: Acc\u00e9der \u00e0 JupyterHub","text":"<ol> <li> <p>Connexion \u00e0 JupyterHub:</p> <ul> <li>Une fois le tunnel SSH configur\u00e9 et votre navigateur param\u00e9tr\u00e9, vous devriez voir JupyterHub list\u00e9 parmi les applications disponibles sur votre cluster EMR.</li> <li>Cliquez sur JupyterHub pour ouvrir l\u2019interface de connexion.  </li> </ul> <ul> <li>Utilisez les identifiants par d\u00e9faut (login: <code>jovyan</code>, password: <code>jupyter</code>) pour vous connecter.</li> </ul> </li> </ol>"},{"location":"2024/08/04/comment-cr%C3%A9er-et-configurer-un-cluster-amazon-emr-sur-ec2/#conclusion","title":"Conclusion","text":"<p>F\u00e9licitations! Vous avez maintenant un cluster EMR pleinement op\u00e9rationnel, avec JupyterHub configur\u00e9 et accessible via un tunnel SSH s\u00e9curis\u00e9. Vous \u00eates pr\u00eat \u00e0 tirer parti de la puissance de calcul d'Amazon EMR pour vos projets de science des donn\u00e9es, d\u2019analyse, ou de machine learning.</p> <p>Si vous avez des questions ou des difficult\u00e9s, n'h\u00e9sitez pas \u00e0 me contacter. Bonne chance avec votre cluster EMR et n'oubliez pas de l'\u00e9teindre une fois termin\u00e9!</p>"},{"location":"archive/2024/","title":"2024","text":""},{"location":"category/cicd/","title":"CI/CD","text":""},{"location":"category/documentation/","title":"documentation","text":""},{"location":"category/aws/","title":"AWS","text":""},{"location":"category/cloud/","title":"Cloud","text":""},{"location":"category/eks/","title":"EKS","text":""},{"location":"category/iam/","title":"IAM","text":""},{"location":"category/ec2/","title":"EC2","text":""},{"location":"category/emr/","title":"EMR","text":""},{"location":"category/spark/","title":"Spark","text":""}]}